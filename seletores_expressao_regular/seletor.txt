'teste.um.dois'.match(/([\w\*\_]+)(#[\w\-\_]+)?(\.[\w\-\_]+)?(\|.+\|+)?(\:[A-z\-]+(\(.+\))?)?/)


'teste#um.dois[tres]'.match(/([\w\*\_]+)(#[\w\-\_]+)?(\.[\w\-\_]+)?(\[.+\]+)?(\:[A-z\-]+(\(.+\))?)?/)



'teste#um.dois.tres[loco]:manero(shfkjhsk)'.match(/([\w\*\_]+)?(#[\w\-\_]+)?(\.[\w\-\_]+){0,}(\[.+\]+){0,}(\:[A-z\-]+(\(.+\))?){0,}/)








var reg = /([\w\-\_\*]+)|((\:[\w\-]+([\(][\w]+[\)])*)?(\[[\w]+\])?([\#|\.][\w\-\_]+)?)/g;
var txt = '*#loco.dois.tres[nao][kjsdfhkj]:fim:eq(fsda)';

console.info(txt.match(reg));





var reg = /((\s[\>]\s)|[\s])|([\w\-\_\*]+)|((\:[\w\-]+([\(][\w]+[\)])*)?(\[[\w]+\])?([\#|\.][\w\-\_]+)?)/g;
var txt = '#loco .dois > .tres[nao][kjsdfhkj]:fim:eq(fsda)';

console.info(txt.match(reg));